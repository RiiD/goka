// Code generated by go-bindata. DO NOT EDIT.
// sources:
// web/templates/common/base.go.html
// web/templates/common/head.go.html
// web/templates/common/menu.go.html
// web/templates/monitor/details_processor.go.html
// web/templates/monitor/details_view.go.html
// web/templates/monitor/index.go.html
// web/templates/monitor/menu.go.html
// web/templates/query/index.go.html
// web/templates/index/index.go.html
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _webTemplatesCommonBaseGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4a\x2c\x4e\x55\xaa\xad\xe5\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\xca\x48\x4d\x4c\x51\x52\xd0\x03\xa9\x82\x48\xda\x24\xe5\xa7\x54\xa2\xaa\xc9\x4d\xcd\x2b\x85\xa8\x41\x16\x4d\xce\xcf\x2b\x49\xcd\x2b\x81\x6a\xd6\x87\x68\xb3\xd1\x87\x59\x91\x9a\x97\x52\x5b\xcb\x05\x08\x00\x00\xff\xff\xfd\x8f\xc0\x67\x8d\x00\x00\x00")

func webTemplatesCommonBaseGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonBaseGoHtml,
		"web/templates/common/base.go.html",
	)
}

func webTemplatesCommonBaseGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonBaseGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/base.go.html", size: 141, mode: os.FileMode(420), modTime: time.Unix(1588163175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonHeadGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x73\xf2\x36\x18\xbc\xe7\x57\x78\x74\xe1\x90\x5a\xc2\x98\x16\x92\xc1\xe9\xa4\xa4\xe5\x23\x5f\x04\x12\x08\xbd\x74\x84\xf4\xd8\x96\x23\x4b\x8e\x25\x03\x2e\xe5\xbf\x77\x1c\x4a\xc2\xa4\x79\x3f\x72\x78\x6f\x7e\xd6\xab\xf5\xee\xfa\x19\x6d\x36\x1c\x42\xa1\xc0\x41\x31\x50\x8e\xb6\xdb\xa3\x4e\xf5\x70\x76\xe4\x38\x8e\xd3\x49\xc1\x52\x87\xc5\x34\x37\x60\x03\x54\xd8\xd0\x6d\xa3\xc3\x57\xb1\xb5\x99\x0b\xcf\x85\x58\x06\x68\xed\x16\xd4\x65\x3a\xcd\xa8\x15\x0b\x09\xc8\x61\x5a\x59\x50\x36\x40\x02\x02\xe0\x11\xec\x4f\x5a\x61\x25\x9c\x6d\x36\x38\xa3\x11\xfc\xf5\x32\x6d\xb7\x1d\xb2\x83\x0f\xc4\x15\x4d\x21\x40\x1c\x0c\xcb\x45\x66\x85\x56\x07\x92\xe8\xff\xc4\xa5\x80\x55\xa6\x73\x7b\xc0\x5a\x09\x6e\xe3\x80\xc3\x52\x30\x70\x5f\x86\x9f\x1c\xa1\x84\x15\x54\xba\x86\x51\x09\x81\xb7\x17\x92\x42\x3d\x39\x71\x0e\x61\x50\xab\x42\x99\x53\x42\x42\xad\xac\xc1\x91\xd6\x91\x04\x9a\x09\x83\x99\x4e\x09\x33\xe6\xd7\x90\xa6\x42\x96\xc1\x6d\x06\xea\x78\x42\x95\x39\xee\x6a\xc5\x41\x19\xe0\xa7\x7e\xbd\xfe\xcf\x2b\x5e\x73\x72\x90\x41\xcd\xd8\x52\x82\x89\x01\x6c\xcd\xb1\x65\x06\x41\xcd\xc2\xda\x56\x4a\xb5\xc3\x8f\x57\x5c\xf4\xc6\x45\x3b\x37\x68\xef\x26\xa5\x6b\xc6\x15\x5e\x68\x6d\x8d\xcd\x69\x56\x0d\x95\xa1\x57\x80\xf8\xd8\xc7\xad\x4a\xf6\x0d\xc3\xa9\x50\x98\x19\x83\x1c\xa1\x2c\x44\xb9\xb0\x65\x80\x4c\x4c\xfd\x76\xd3\xfd\x6d\x3a\x17\x62\x32\xf8\x03\x2e\x3d\xde\x4b\x87\xe3\xf3\xa7\x92\x15\xfd\xf3\xfe\x38\xf2\x1b\xb7\xe9\x03\x5b\xad\x5a\x5a\xf9\xe3\x39\x8f\x9a\x53\x7a\x3c\x4a\x27\xf7\xe6\x6f\x72\xf9\x4b\x7b\xb9\xe0\xbf\x27\x71\xb3\x40\x0e\xcb\xb5\x31\x3a\x17\x91\x50\x01\xa2\x4a\xab\x32\xd5\x85\x41\x3f\x3a\x94\x6b\x63\x48\xe1\x6b\xd1\xf2\x7e\xa9\x6f\x3c\x31\x36\xd3\xc7\x69\x53\x5d\xd4\x87\x85\x95\xaa\x47\x8d\xec\x0e\x8b\x6e\xab\x58\x25\xbc\x98\x9d\x4c\xa6\xf9\xd5\x72\x3c\xd7\x7a\x94\x35\x16\xb3\x79\x94\x46\xc3\xbb\xc1\xe3\x4a\x92\x49\xf6\xad\x68\xbb\x8d\x74\x4c\xce\x02\x44\x08\x4d\xe8\xfa\xfd\x9a\x54\x18\x91\x62\x61\x48\xf2\x5c\x40\x5e\x12\x0f\x7b\x1e\xae\xff\x37\xbd\x78\x4f\x0c\x3a\xeb\x90\x9d\xd4\x07\xba\x9f\xad\x28\x79\xff\xdb\x93\x0f\xab\xb9\x67\x3f\x0f\xee\xc4\xa2\xde\x68\x3d\x2f\xcb\x64\x72\x1d\xf6\x93\xdb\x6b\x7a\xf5\x14\x16\xb3\xe9\xfa\xcf\xf5\xc3\x48\x75\x87\xe7\x2d\xd9\x48\xbb\xb3\x9b\x41\xd6\x3b\x49\x7b\xdd\x8b\xf6\xaa\x77\x33\x60\xa3\x8b\xd6\xfd\x9a\x7e\xb9\x9a\xef\xc8\xc2\xb8\x4a\x0c\x66\x52\x17\x3c\x94\x34\x87\x77\x55\x49\xcd\xa9\x89\x71\x62\x48\x13\x7b\x2d\xec\xed\x81\x4f\xb4\xc5\xfd\xc4\x60\x9d\x47\x84\xfb\x78\xd9\xfc\xe0\x64\x87\xec\xae\xb7\xcd\x06\x14\xdf\x6e\x8f\xfe\x0d\x00\x00\xff\xff\x25\x6d\x7e\xc6\x00\x05\x00\x00")

func webTemplatesCommonHeadGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonHeadGoHtml,
		"web/templates/common/head.go.html",
	)
}

func webTemplatesCommonHeadGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonHeadGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/head.go.html", size: 1280, mode: os.FileMode(420), modTime: time.Unix(1588163175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\x65\x36\xb0\x60\x7a\x81\xb4\x0b\x38\x08\x72\x13\x57\x8d\x6a\x1c\x94\x36\x91\x50\x94\xbb\x23\x98\x36\xc0\xcc\x2a\xb1\xfe\x8b\xde\x8f\x4b\x71\x3c\x7b\x65\xc0\x77\xd6\x84\xb5\x76\x46\x29\x83\x15\xda\xb6\x01\x95\xf2\x44\x11\xae\xc7\xb3\xe3\x99\x92\xec\x38\x76\x00\xc6\xf9\x46\xd9\xa0\x3b\x79\xe5\xf8\x93\xfc\xcf\x8e\xa7\x0b\x93\x6b\x39\x80\xa1\x9b\x7c\x8a\xa4\x0e\x61\x89\x3c\x0f\xf8\x80\x10\xf4\x55\xbc\x5d\x07\x5c\xfc\xb6\x87\xf8\x79\x99\xc8\xae\x8f\x4f\x38\xbe\x90\x5d\x4d\x4f\x87\xa8\x77\x3e\xdf\x3b\x6d\x10\xa1\x8f\x8d\xcf\xde\xe7\xfc\xab\x4f\xf2\xc7\x7f\x62\x4a\xb9\x11\xa5\x4c\x12\xec\x7a\xdd\xca\xdb\xf7\x07\x59\x77\x84\x4b\xad\x0d\x60\x75\x6d\x32\x7d\x92\x9b\x4a\xc7\xc5\xf4\x4a\x79\xec\x4a\x01\x56\x07\xb5\x76\x5f\x01\x00\x00\xff\xff\x42\x5b\x78\xaf\x71\x01\x00\x00")

func webTemplatesCommonMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonMenuGoHtml,
		"web/templates/common/menu.go.html",
	)
}

func webTemplatesCommonMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/menu.go.html", size: 369, mode: os.FileMode(420), modTime: time.Unix(1588163175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorDetails_processorGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5b\x73\xdb\x36\xb3\xef\xf9\x15\x5b\x9e\x07\x91\x8d\x4c\xfa\xd2\x27\xdb\xd2\x19\xa7\xe9\x39\x4d\x27\xb7\x69\x3d\xa7\x0f\x3e\x1e\x0f\x44\x42\x12\x62\x0a\xe0\x00\xa0\x64\x55\xa3\xff\xfe\x0d\x00\x5e\x40\x90\xd4\x25\xc9\xd7\x26\xdf\x58\x0f\x8d\x85\x5d\x2c\x16\xd8\xfb\x02\xea\x66\x93\xe0\x29\xa1\x18\xbc\x98\x51\x89\xa9\xf4\xb6\xdb\x17\xd7\x09\x59\x42\x9c\x22\x21\x46\x1e\x67\x2b\x6f\xfc\x02\xc0\x1e\x53\xa8\x88\x50\xcc\x35\xc4\x85\xa5\x27\x8b\xe4\xe4\xec\xbc\x84\xcd\xcf\xc6\x9b\x4d\x28\x89\x4c\xf1\x76\x7b\x1d\xcd\xcf\xc6\x2f\x5a\x93\x32\x44\x71\x0a\xfa\xbf\x27\x09\x9e\xa2\x3c\x95\xc5\xf4\x7e\xbc\x39\x46\x09\xa1\xb3\x0a\x4f\x2d\x75\x31\xfe\x88\xb8\x24\x92\x30\x0a\xb7\x68\x92\x62\xf0\xff\x90\x48\xe2\xe0\x3a\x9a\x5f\x54\x04\xa3\x84\x2c\x0b\x26\x3a\xc8\x9f\x4c\x58\xb2\xb6\xa9\x4a\x4d\xa8\x40\x31\x5f\xf4\x7f\x4f\x84\xe4\x24\xc3\x89\x85\xab\xb0\x15\x5f\xf6\x88\x1a\xe3\xcd\x01\x8d\x06\xfa\x48\x46\x5e\xc5\xb1\x07\x9c\xad\x44\x86\xe8\xc8\x3b\xf7\xea\x8d\x5c\x47\x72\xbe\x63\xba\xda\x5f\x2e\x80\x4d\x41\xce\x31\x64\x9c\xc5\x58\x08\xc6\x9b\xc4\xf4\x21\x1c\x40\x48\x40\x92\x73\x42\x67\xc0\x71\xcc\x96\x98\xaf\x3d\x88\x59\x6a\xc8\x5c\x78\xe3\xdf\x8b\xd1\xa3\x28\xe5\x14\x24\x59\x60\x8b\xd2\xb9\x37\xfe\x93\x13\x89\x45\x9b\xce\x75\xe4\x9e\xd5\xee\xc3\xbb\x25\x0b\xac\xf6\x9e\x21\x21\x70\x52\xb1\x0d\x82\xc1\x14\x71\x6f\xac\xe0\x7b\xb8\x7d\x9f\x2f\x26\x98\x2b\x22\x0b\x2c\x04\x9a\x61\x51\x92\xc1\x09\x64\x98\x83\xc0\x31\xa3\x89\x37\xfe\x7d\xff\x19\x76\xd0\x4a\xd1\x6c\xa6\xce\x61\x82\xe7\x84\x26\xf0\xeb\x9f\xef\xbc\xf1\x5b\x34\x3b\x9e\x50\x9e\x25\x48\x7e\x09\x4b\x93\xb5\xec\x21\xf3\x6a\x7d\x90\x30\x14\x86\xa3\xdc\xd7\x52\x59\x0b\x90\xa4\xb0\x0c\x25\x7a\x22\x24\x89\x85\xe7\xcc\x54\x78\x96\x51\x45\x1a\xdd\x31\x49\x70\xac\xf3\xdf\xe3\x22\x7e\x63\x84\x8a\xe8\x2d\x63\x8f\x79\x26\x3a\x1c\x43\x0f\xcd\xbf\xdb\x2f\xdc\xae\x33\xad\xda\x4d\x4b\x56\xa3\x7b\x24\x7e\xcb\x32\x12\x3b\xb3\xd4\xd0\x9e\x69\x5f\xd5\x0f\x69\xe7\xfb\x2d\xfb\xa0\x9f\xbc\xf1\x1b\x1a\xb3\x05\xa1\x1d\xa6\xf8\xec\x85\xbe\x21\x2f\xd4\xa0\x43\x2b\x3a\x6c\x3a\x15\x58\x8a\xa1\x56\xb7\x25\xc1\x2b\x20\xd5\x36\xbd\xf1\x07\x0d\x85\xfd\x5b\x54\x6a\x01\x09\x4e\xd1\xba\x87\x92\x96\x6d\x27\x9d\xe3\xdc\xe3\x27\x46\xa8\x56\xca\x6f\xd7\x31\xbe\xa1\x59\x2e\xe1\x96\xa3\xe9\x54\x79\x8b\xda\x31\x02\x5c\xe7\xa9\xde\x05\x51\x28\xda\x9b\xd8\xfb\xb8\x8e\xf2\xb4\x4e\xa8\xbe\x2d\x2f\xfa\x79\xce\xf0\x2d\x12\x12\x8c\x12\x35\x27\x17\x8a\xe5\x2f\x08\x8d\xd0\x72\x16\x2d\xd0\x53\xb0\x87\x96\x32\x0f\xa5\xb1\x78\x89\xa9\x14\xcd\x3c\xe8\x17\x35\x06\x07\x18\x50\x49\x44\x9b\x4f\x93\x86\xb2\x9b\x43\x48\xbc\x45\x33\x98\x32\x5e\x58\x0e\x20\x9a\xb8\x4e\xf1\x42\x3b\x05\xf0\x0d\x46\xa4\xa0\x1d\x9b\x3b\xd6\x3b\x9a\x3d\x72\xb5\x01\x42\x41\x32\x89\x52\x25\x04\x89\xd2\x3d\x0c\x5b\x13\x95\x9f\xc8\xaa\x00\x35\xfe\x88\x39\x1c\x1a\x98\xf4\xf1\x7c\xc6\xea\xf5\xbc\x2f\x58\xfc\x1d\xa1\xca\x79\x78\xe3\x77\x64\x1f\xea\xcd\x72\x66\x50\x6f\x96\xfb\x9c\xd6\x3b\xf4\x54\x50\x45\x4f\x5f\xea\x97\xb4\x45\x7f\x0f\x69\xdb\x87\x5c\xce\x98\x8a\x61\xcf\x0e\xea\x9f\x75\x2a\xcf\xf6\xbf\x73\xf1\xe3\xcc\x8f\xe5\xf2\xeb\xdb\x9f\x88\x39\xc9\x24\xc8\x75\xa6\x32\x1c\xfc\x24\xa3\x4f\x68\x89\xcc\xa8\x57\xd9\xc1\x12\x71\x48\x91\x90\x6f\x4a\x0f\x20\x60\x04\xc9\x45\x98\xb2\x18\xa5\x7e\x70\xe5\xa0\x7d\xa8\x38\xdd\x8d\x77\x5b\xd6\x81\xbb\xd1\x7e\x2b\xf3\xa1\x5e\x2c\xa1\x2b\x8a\x77\x28\x83\x11\x6c\x4e\x2f\x3d\x21\x59\xa6\xec\x6d\x08\x67\x97\x1e\xa1\x44\x12\x94\x92\xbf\x94\xa3\x18\xc2\xf9\x25\x78\x45\xbe\x6c\x06\x2e\x2e\xbd\x8c\xe3\x0c\x15\x5f\x7f\x52\xf0\x9c\x52\xf5\x6d\x7b\x65\x9f\x80\xc0\xb1\xb8\x65\xef\x11\x65\x30\x82\xb3\xd3\xf2\xd3\xc0\xe1\x98\x26\x98\xbf\xc6\x12\x91\x54\xf1\x3b\xcd\x69\xac\x84\xef\x57\x5a\x21\x82\xcd\x8b\x4a\x4a\x64\x6a\x01\x60\x34\x02\x9a\xa7\x69\xb0\xb1\x04\xcb\xb1\xcc\x39\xbd\xaa\x46\xb6\xf5\x64\xb5\x9e\xc9\x8e\x6f\x9b\x05\xb5\xbd\xae\x3a\x9a\xc6\x92\xf6\x89\xc1\xa8\x3e\xba\x3b\x8d\x19\x9a\xe2\xec\xfe\xca\x9e\x40\xa6\x7e\x05\x4c\x53\x9c\x34\x18\x84\x9a\x96\x27\x0c\xdc\xbb\xb2\xe0\x5b\x67\x65\x8e\xe3\x5f\x68\xa2\x73\x65\xb3\xba\x08\xcb\x42\xad\xfa\x43\x43\x7f\x18\x81\xe7\xc1\x7f\xef\xc4\xb9\x2c\xa0\xef\xd9\xea\xaa\xbd\x4e\x8d\x37\x02\x9f\xe2\x15\xbc\x46\x12\xfb\x35\x03\x01\x9c\x40\x35\xec\x2c\xf3\x87\x44\x5c\x6a\xa4\x00\x22\x2d\xed\xf0\xb4\x6f\x09\xed\x1c\x47\xd0\x0b\x57\x99\x52\x6b\xaf\xbf\xae\x16\x70\xe2\x0e\x16\x39\xe3\x95\x2b\xae\x15\x27\x12\xf7\x2d\xa3\x81\xba\x24\x32\x50\x0b\x1c\x45\x90\x62\x39\x10\x10\xcf\x71\xfc\x08\x64\x0a\x2b\x0c\x73\xb4\xc4\x80\x20\xe3\x78\x49\x58\x2e\x20\x41\x12\x95\x69\x9e\xfa\x57\xce\xf1\x02\x24\x53\xff\x12\xde\x24\x16\x33\xce\x71\x2c\x61\x89\xd2\x1c\x0b\x87\x0f\x65\xab\xa5\x9d\x36\xcd\x3b\x9c\x61\xe9\xcb\x39\x11\x81\xab\x57\xd5\x1c\x47\xa7\xa2\x08\x12\x32\x9d\x2a\x36\x2a\x3e\xf5\x59\x29\xd7\x6c\xca\x40\xd1\x98\xa0\x18\x50\x59\xe8\x6b\x35\x6b\x04\x7e\xa5\x17\x70\x52\x33\xa6\xbe\xdb\xe2\x6c\x50\x28\xb4\x3c\xd7\x76\x68\xbb\x08\x87\x35\x70\xe5\xee\xaa\x4e\x21\x44\x7b\x5d\x07\x16\x44\x25\xab\x57\x0d\xd2\xdb\x26\x47\xb6\xd4\x8b\x45\x4c\x37\x34\xfc\x99\xe5\xb4\xb9\x82\x0d\xe8\x23\xdf\x50\x94\x26\x41\x33\xda\x41\x50\x03\xba\x09\xda\x96\xed\xc8\x5b\x14\xf2\x1e\x1a\xa1\x35\xc5\x6e\x5c\x1a\x0c\xae\x65\x32\x1e\xbc\x34\x6c\x54\x5e\x30\x94\xec\x7f\xc8\x13\x4e\xfc\xd3\xe0\xe5\xe0\x3a\x92\xc9\xf8\xff\xe9\xe0\x65\x63\x1b\xd6\xc4\x5c\xec\x41\xb2\xbd\xc0\xcb\x81\x38\x08\x57\x9d\xf8\xe1\x6c\x58\x46\xbe\x07\xb3\x12\xe7\xe1\xc4\x6b\x89\x75\xce\xb1\xc2\xc2\x55\x33\x2e\xcc\x38\xcb\xb3\x9f\xe7\x88\x50\x18\xc1\x43\x18\xab\xbf\xac\x50\x13\xfe\xaf\x82\x07\x57\x8d\x39\x15\xf8\x2d\x11\x12\x46\x16\x0d\x47\xff\xc3\x29\x49\x25\xe6\x7e\x15\x64\x96\xc1\xa6\x10\xea\x32\xb4\x82\xfa\x0f\x26\x9e\x5d\xc1\x36\x70\x29\x2c\x50\x66\x4d\x1f\xea\xb5\xdf\xb8\x81\xc5\x52\x96\x87\x10\x09\x41\x66\xd4\x6f\x21\x00\x6c\xb6\xc3\x8e\x51\x9b\x93\x2e\xf8\x06\x06\xef\xd9\x6a\x70\x59\x47\x80\xa5\x76\x0f\x5d\xb8\x00\x83\xea\x70\x06\x70\xa9\xb8\x15\xf8\x0d\x95\x7e\xc1\x76\xd7\x9c\x0e\xa6\x82\x2b\x67\x68\x1b\x84\xc6\x93\xfa\x41\x28\x18\x97\xaf\xd6\xbe\xb5\x50\x01\xf4\x6d\xeb\x89\x22\x50\x88\x80\xd2\xb4\x96\x97\xb0\xc1\x26\x23\x18\x02\xa6\x12\x73\xed\xd3\x39\x5e\xb0\x25\xd6\x6e\xbe\x21\xef\xc4\xe4\x53\x02\xa7\x38\x96\xbe\xf7\x5f\x6e\x5b\x3e\x28\x40\x37\x69\xea\x7b\xb5\x85\x4e\xd8\x93\x17\x84\x8a\x9a\xdf\xd0\x18\x6b\x77\x49\x38\x97\x8b\xd4\xef\x4c\x4e\x1a\x68\x9a\x49\x3f\x08\x51\x96\x61\x9a\xf8\x9e\xe4\x5e\x10\xea\x02\x0a\x27\xbe\xd7\x58\x72\x08\x92\xe7\x38\x38\x98\xf2\x13\x91\x7e\x10\x9a\xbd\xfb\x41\xd3\x3a\x4c\x96\x66\x9a\x58\x56\xae\xa4\xf6\xd4\x50\x41\x1d\x54\x54\x89\xa5\x4e\x0a\x49\x74\x77\x7a\xef\x06\x5f\x51\x26\xa6\x0a\x7c\x76\xef\x46\xdf\xa2\x90\x2d\x02\x26\xac\xf0\x80\x63\x30\xc5\xa9\x64\x90\x10\x91\xa5\x68\x1d\x36\xe7\x28\xc7\x09\x6c\xf2\x49\x05\xda\x15\x49\x53\x98\x60\x10\x92\x71\x9c\xa8\xe0\xe7\xe4\xe1\x92\x41\x8c\xd2\x38\x4f\x51\x51\x83\x08\x40\x6a\x9d\x34\x75\x18\x2d\x38\x18\x41\xd3\xc6\x3c\xca\x56\xde\x65\x65\x03\x8e\x2a\x7b\xb1\x8a\x27\x7f\xe4\x0b\x0f\x2e\xe1\x21\x14\xf9\xa2\x08\x1b\x26\xce\x74\x21\xdf\x2c\x67\x06\x79\x81\x11\xdd\x85\xad\x4b\xc9\x0e\xd2\x26\xe2\x74\x21\x77\x91\x6e\x63\x2b\x57\xe8\xec\x5d\x33\xd6\x97\x3e\x55\xc0\x9b\xe5\xac\x0b\xae\x97\xee\x9b\x5c\x01\xab\xc9\x7b\x92\xa2\x5a\x74\xff\x40\x52\x64\x74\x20\xa4\x4e\x56\x44\x77\x67\x45\x25\x85\x96\x77\xb6\x8f\xb5\xa4\x5d\x2a\xcc\x49\x4d\xbe\x1c\xea\x4b\x4b\xc0\x15\x41\x83\xd6\xcd\x72\xe6\xd2\xba\x59\xce\xfa\x69\xd9\xe2\x2a\x09\x95\xaa\x66\x11\x2a\x87\x0e\x20\xd4\x64\xaa\xd4\x44\x97\xd6\x0e\xa6\xb6\x3d\x49\x53\x14\x01\x4a\x12\x1d\x80\x0a\xeb\x9c\x32\xae\xef\x16\x28\x7e\x92\xc0\x59\x4e\x13\x27\xc7\xb2\xd4\xa7\xce\xb1\xcc\xe4\xa0\xa5\x7b\xfa\xb2\xa2\x65\xf1\x0b\x42\x8d\x11\x91\xd2\x86\x5e\x2b\xbc\xc0\xca\x30\x0a\x65\x30\x9f\xa6\x25\x2a\xd3\x73\x6d\xf0\xa8\xf9\xe8\xc9\x4c\x47\x4f\x47\xcf\xde\xf6\x67\x91\xda\x4b\x77\x27\x53\x05\x86\xbd\xe1\xb7\x48\xc8\x22\x13\xb7\xf3\x2a\x2f\xf2\x5e\x36\x36\xb6\x1b\xaf\xda\x41\x0f\xda\x2e\x6e\x2a\x8d\x3f\x7a\xc2\xcd\x72\x76\xe8\x9c\x4a\x83\x8f\x9e\x70\xc4\x22\xf6\xb9\x9a\x43\x78\x8b\x66\xcd\x73\x88\x06\x2f\xb5\x2a\x2a\xcc\x0a\x70\x1e\xf4\xe4\xe3\x35\xdd\x5a\x10\x7b\x09\x63\x74\x14\xe5\x4a\x74\x7b\x09\xa3\xa7\x6e\xba\x96\xb1\x6d\x9b\xf9\xd9\x8a\xf1\x47\x15\xdf\x19\x2d\x83\xb8\x67\x32\x8d\x39\xe6\xd8\xbb\xac\x51\x7f\xac\xfe\xb4\x0d\xd4\xd3\xa9\xb9\x77\xe9\xc6\xe9\xd3\xd6\x90\xca\xa3\xd5\xc7\x19\x34\xab\x75\x61\x83\x97\x0b\xcc\x4f\xe2\x94\xc4\x8f\x0a\xee\xe9\xb8\xec\x5d\xc2\xd9\xf9\x50\x91\xda\xb6\x26\xb8\x23\x4e\x52\xbb\x1d\x76\x7a\xb6\x1f\xa3\x46\xb6\x85\x66\x33\x8e\x67\x48\x9a\x5c\xfc\xd5\xfa\xb6\xc8\xa8\xda\xbd\x31\xbd\xf5\x21\x08\x96\xf3\x18\x17\xb5\xe3\xff\x19\xe7\xb6\x71\x12\x2b\xff\x2c\x80\x19\x36\x89\xb0\xf2\x98\x55\x1c\x44\x90\xaa\xf2\x65\xa5\x4e\x5b\x43\x4c\x02\x47\xd1\x02\x03\xd1\x18\x6a\xf0\x11\xaf\x61\xa0\x21\x83\xae\x7c\x4f\x33\xd2\x55\x39\x99\xba\xa9\x55\x0f\xa5\x48\xbe\x43\x59\xbb\x38\xa9\x4b\x1c\xb5\x8b\x8e\xf2\xc6\x2a\x70\x54\x49\xa4\xd1\xee\xcc\xfe\xef\xbb\x2b\x91\x9e\x05\xf4\xfe\x87\x9a\xf9\xce\x65\xda\x1f\x3d\xe3\xce\x7b\xd0\x73\xbc\x7b\x18\x99\xad\xbb\x61\xb0\xfb\x53\x70\xad\x69\xec\x9b\xb1\x6d\xd5\x3d\x6d\xc5\xb2\x0a\x21\x07\xa2\x13\x62\x4c\x4d\x35\x0a\x44\xc2\x64\x6d\x42\x24\x5a\x60\x07\x55\xa3\xbc\x5a\x77\xd6\xa5\xf5\x46\xaf\xb6\x5d\x85\x95\x5e\x48\x25\x46\x45\x83\xcc\x06\xfc\x68\x7d\x71\xac\xb2\x61\x50\x77\x0e\x3f\x6d\x03\x73\x45\x6a\x61\x5c\x74\x63\xb8\xf6\x7d\xdf\x6d\x72\xda\xe8\x1c\x0b\x39\x0f\x8a\xe6\x5f\x65\x80\xe6\xdd\x82\x49\x35\x24\x9b\x61\x39\xc7\x5c\xe7\x1c\x18\xc5\x73\x23\x7e\xd1\x24\xb2\xc2\x03\x65\x60\x1c\x51\xc1\xf8\xc2\xb4\x06\x05\xb3\xf0\x61\x8e\x04\x20\x5a\xd7\x2b\x72\x5e\x9a\x20\x9b\x1a\xfd\xe8\x32\xb0\x32\x25\xd6\x6a\x6f\x4c\xdc\xaf\x2d\x6f\x58\xeb\x75\x8d\xed\xa8\x75\x65\x37\x9a\xb9\x29\xe3\x0b\x0b\xd7\x3d\x45\x95\x69\x15\x87\xc0\xb8\x72\x03\xb1\x6e\x54\x9b\xbd\xeb\x07\x38\x05\xff\x7e\x87\xd0\xc0\xb5\xf7\x8a\x39\x14\xc7\x45\xf6\xd5\x61\x73\x51\x04\x33\x06\x6c\x89\x4d\x4a\x87\xe2\x38\x2f\xcf\x5e\x55\xe5\xa6\xe4\x35\x27\xa9\x87\x61\xca\xd9\xa2\xc8\xfe\x56\x05\x3f\xae\x31\x00\x3c\x84\x53\xc6\x7f\x41\xf1\xbc\xab\x13\xf2\x10\x3e\xe2\xb5\x50\x6c\xf5\xb4\x31\x2a\xce\x1f\xf1\xba\xd7\x4d\xa0\x38\xbe\x7b\xc4\xeb\xfb\x30\xcb\xc5\xbc\x70\x49\xea\x7b\x87\x19\x43\x87\x29\x77\xf5\x39\x3a\xe4\x81\x17\x99\x5c\xeb\x53\x59\xa8\xe2\x95\xf1\xcb\x62\x48\xe9\x8e\xc9\x84\x95\x6f\xaf\x0a\x67\x58\x21\x2a\x5f\xb8\xfb\xfd\x8b\x64\x1f\xf4\x49\xf9\x56\xb0\x18\x16\xde\xb4\x31\x54\x6d\xbd\xf2\x09\x77\xca\x15\x34\x65\x6b\x7f\xdb\x76\x76\x2d\x6b\x1d\xeb\xbd\x93\xa9\x51\x8a\x46\xda\x43\x28\xd9\x47\x44\xb8\xf0\x3b\x43\x61\xab\x2f\x37\x2c\x63\xf8\x10\xee\x0a\x6d\x1c\x82\xbe\x65\x14\xea\x8f\x2a\x67\x51\x5f\xea\xdc\x53\x7d\xd3\xb9\xb4\x77\x1f\x38\x2d\x23\xcb\xaf\x59\xb6\xca\xa6\x26\x7a\x6a\xb3\x1f\xba\xa6\x6b\x1d\xbe\xcf\x28\xae\xdd\x44\xc5\x6d\x60\x2f\x61\x5a\x2a\x5a\x7d\xf5\xc5\xba\x36\xfd\xe2\x3a\xaa\x88\xb9\x66\x7c\xc2\x9e\x76\x76\xa1\xdc\x57\x06\xfb\xbb\x50\xcd\xf3\xb6\x24\x9d\x04\x9b\x52\x6c\xc9\xdd\xe9\xfd\x55\x23\x12\x7d\x7e\xf3\xc9\xea\x1e\xb5\x7b\x5e\x7d\xc0\x56\x3f\xaa\xa3\x21\x65\xee\x4d\x9f\x3b\x52\xcf\x1d\xa9\xbf\xb3\x23\x65\xdd\xd6\x3f\xb7\xa4\xda\x84\x9e\x5b\x52\x7b\x5a\x52\xb6\xfe\xec\xee\x49\x1d\xdb\xb2\xf9\x4e\x9b\x24\xfd\xad\x01\x2b\x48\x9a\xd7\x3c\x1d\x51\xb2\x00\xb8\x61\xb2\x7e\xfd\xf3\x05\x59\x85\x11\x55\x57\x5a\xd1\x4c\x19\xba\xe2\x72\xeb\xf9\xd1\xfe\xc0\xec\xf0\xfc\x77\x45\x66\xb3\xcb\xbe\xd0\xdc\x01\xdd\x1d\x9b\xcd\x5d\x93\xfd\x08\x69\xd7\xe3\x9a\x28\xd2\x32\xc5\x29\x16\xa2\xfe\x8d\x95\x80\x84\xd1\x81\x34\x19\x98\x79\x19\xe8\x96\x46\xe5\x23\x9b\xce\x57\x40\xed\x77\x40\x4e\x37\xb4\x7e\xee\x30\xaa\x2f\x34\xdb\x1d\xe1\xe7\x67\x3f\xdf\xd5\xb3\x1f\x8e\x51\xd2\xbf\x0a\x4a\xbe\xc1\x47\x3f\x95\x9d\x3c\xbf\xf9\x39\xf4\xcd\x8f\xc3\x50\xb5\xa3\xf1\x69\x07\x17\x95\x42\x14\x1c\xe8\xc4\xbb\xe3\x3d\x90\x35\xde\x9f\x4f\xd8\x3a\xd4\xa0\xd7\x7e\x0e\x64\x8d\x1f\x9b\x53\x34\xd5\xe2\xe8\xa7\x41\x72\x9d\xe1\x03\x9e\x02\x89\x70\x47\x42\x01\x3d\xaf\x8d\xfe\xd3\x9e\x18\x95\xfa\x71\x0c\xed\x42\x05\x8e\x7b\x78\x55\x2a\x44\xd5\x8b\x38\x7c\x7a\x43\xd1\x74\xc3\x22\xaa\xaf\xfb\x82\xbe\xdb\x96\x4a\xb1\x9a\x19\x15\x7e\x92\x1c\xc5\xe6\x1a\xe0\x13\x23\xd4\xf4\xd6\xf4\x13\x19\xed\xd1\x96\x04\x15\xf5\xb2\x1a\xaf\xe4\x7e\xf2\xe6\x75\x23\xc6\xab\xa9\x38\xa9\x12\xab\x9e\xe7\x52\x55\x9f\xbf\x7d\x73\xd1\xf3\x82\xa9\x6a\x52\x3a\x14\xc3\xdf\xf4\x82\xad\x66\x77\xf9\x69\x3c\x8f\xca\x86\xb0\xaf\xaf\x5f\xa4\xed\xf5\x75\x87\xfe\xc9\xce\x1c\xd7\x3b\x2e\x7c\x7b\x51\xc5\xf7\x12\xca\xee\x8a\x5b\x91\x03\xee\x03\xb2\x3b\xeb\xb1\x92\xc2\x37\x47\xb0\x73\x82\x32\x66\x8d\x3b\x50\x47\x3e\xe8\xc7\x2d\x4e\x2e\xeb\xc3\xd8\xf6\x9e\x5d\xdf\x45\x42\x03\xee\x5b\x09\xa0\x75\x1f\xa0\x55\xaa\x38\x3a\x2d\xb2\x66\x2a\x98\xea\x5f\x02\xf7\xab\x89\xf9\xa5\x70\x87\x9e\xe8\x94\xaf\x5b\x8c\x8e\x8a\x68\xcc\xf0\x63\xfd\x5a\xfc\x50\x15\xe9\x7d\x41\x57\x7e\xbe\x43\x1d\x31\xe7\xfd\xbd\x69\xc9\x02\xf3\x99\x71\x26\xe6\x86\x23\x66\x34\x46\xd2\xaf\x7d\xcc\xd0\x52\xa4\xc0\xee\x0d\x95\x77\x5d\xa5\xff\x32\xcd\xd8\xc9\xba\xcb\x85\x55\x93\x9a\xcb\x59\xdf\xf4\x93\xc2\x5a\x47\xd0\x70\xe2\x68\x87\x49\x23\x45\x9e\x2a\x75\x46\x3a\xd0\x9a\x5f\x57\xe0\x9f\xd9\x22\x43\x1c\xfb\x13\x3d\xe8\xf4\xf3\xc9\xd4\x2f\x67\x8d\xa0\x2b\x47\xa9\x29\x2a\xb6\xdb\x24\xb5\x15\xec\xc9\x82\x0e\x5c\xa1\xd6\xdd\x13\x98\xd4\xdf\x76\x11\x2f\x74\xc6\x10\x69\x94\x2c\xae\x2c\x3e\xff\x29\x65\xfd\x13\xde\xfd\x55\xb2\x25\xb1\xbe\x27\x94\x55\xf6\xf4\x15\x1f\x4f\xf6\xd0\xec\x29\x85\xeb\xb0\xbb\x22\x34\x61\x2b\x95\xc6\xbd\x51\xeb\x2f\x51\x5a\xab\x58\x60\xb5\x72\x93\x8b\xf0\x93\x60\xd4\xf7\x36\x9b\x70\x82\x04\x7e\xc8\x90\x9c\x6f\xb7\x91\xda\x73\x54\x15\xc6\xd1\x66\x13\x2e\x11\x17\x21\x49\x9e\xb6\x5b\x6f\xd8\xfc\x01\x4d\xc5\xda\x76\x08\xe7\x2a\x3b\xa8\xb8\x50\x65\x89\x8a\xf9\x44\x42\xf1\xfb\x9e\x74\xfd\xe2\xab\x2e\xac\xa9\x5d\x47\xe6\xa7\x50\xfa\x7f\x6b\x63\x7e\x37\x55\xfc\xb3\xd9\x60\x9a\x6c\xb7\x2f\xfe\x15\x00\x00\xff\xff\xf4\xaf\xc5\x50\x16\x47\x00\x00")

func webTemplatesMonitorDetails_processorGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorDetails_processorGoHtml,
		"web/templates/monitor/details_processor.go.html",
	)
}

func webTemplatesMonitorDetails_processorGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorDetails_processorGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/details_processor.go.html", size: 18198, mode: os.FileMode(420), modTime: time.Unix(1589209908, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorDetails_viewGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\xdd\x6f\xdb\xb6\x16\x7f\xcf\x5f\x71\x2e\xef\x83\x25\xc4\x96\xf2\xd1\xa7\xd8\xf2\xc5\x6d\xb3\xa1\x01\xd2\xac\x68\x83\xee\x61\x1b\x0a\x46\x3c\xb6\xd9\xc9\xa4\x40\x52\x72\x32\x41\xff\xfb\x40\x4a\x96\x28\xc5\x6e\x52\x6c\x79\xb0\xac\xf3\xf1\x3b\x87\xe7\x93\x71\x55\x31\x5c\x71\x81\x40\x52\x29\x0c\x0a\x43\xea\xfa\x64\xc1\x78\x09\x69\x46\xb5\x4e\x88\x92\x3b\xb2\x3c\x01\xf0\x69\x56\x94\x72\x81\xca\x71\xc6\xbc\x6c\xb6\x65\xb3\xf3\x8b\x3d\x6f\x73\xbe\xfc\xc2\x71\x07\x55\x15\x19\x6e\x32\xac\xeb\x45\xbc\x39\x5f\x9e\x3c\xd3\xcc\xa9\xc0\x0c\xdc\xe7\x8c\xe1\x8a\x16\x99\x69\x31\x8e\xcb\x6d\x90\x32\x2e\xd6\x9d\x9c\xb5\x77\xb9\xbc\xa7\x0f\x19\x82\x36\xd4\x70\x6d\x78\xaa\x17\xf1\xe6\xb2\x43\x8a\x19\x2f\x5b\xeb\x07\x70\x67\x0f\x92\x3d\xf9\x70\xc6\x61\xb5\x22\xcd\x8b\xfb\x9c\x69\xa3\x78\x8e\xcc\x93\xb5\xd2\xd6\x21\x9f\x62\x69\x6a\x48\x70\x62\xe0\x62\x91\x90\x8f\x54\x19\x6e\xb8\x14\x04\x94\xdc\xe9\x9c\x8a\x84\x5c\x90\x65\x47\x5e\xc4\x66\xf3\x1d\xf5\xcf\x86\x9a\x42\x83\x5c\x81\xd9\x20\xe4\x4a\xa6\xa8\xb5\x54\x43\x30\x2b\x84\xaf\x00\xd2\xc0\x0a\xc5\xc5\x1a\x14\xa6\xb2\x44\xf5\x44\x20\x95\x59\x03\x73\x49\x96\x9f\x5a\xea\x0f\x21\x15\x02\x0c\xdf\xa2\x87\xf4\x86\x2c\x6f\x44\x2a\xb7\x96\x7d\xaf\xe8\x6a\xc5\xd3\xe7\x88\x8b\x78\x1c\xb5\xef\x87\xf1\x9e\x6f\xd1\x46\x21\xa7\x5a\x23\xeb\x0e\x00\x5a\xc2\x8a\x2a\xb2\xb4\xfc\x17\xfc\xbe\x2b\xb6\x0f\xa8\x2c\xc8\x16\xb5\xa6\x6b\xd4\x7b\x18\x64\x90\xa3\x02\x8d\xa9\x14\x8c\x2c\x3f\xbd\x1c\xcd\x03\x58\x19\x5d\xaf\xed\x91\x1f\x70\xc3\x05\x83\xf7\xbf\x7e\x20\xcb\x5b\xba\xfe\x71\xa0\x22\x67\xd4\xfc\x13\x97\x1e\x9e\xcc\x11\x98\xb7\x96\xf3\x02\x8e\xe8\x70\xe4\x6a\xa5\xd1\xe8\xa9\x2b\xbd\xd2\xb6\x38\xef\x8e\x49\x96\xbf\x38\x2e\xbc\x7c\x44\x5b\x1e\xc0\x30\xa3\x4f\x47\x90\x5c\x6e\x0f\xe2\x8c\xab\xc4\x4a\x8c\xfa\x6f\x61\x6c\x43\x03\x67\x09\xb1\xc0\x9f\xbb\x99\x40\x46\x8a\x56\xcc\x6b\xfb\xd8\x35\xf9\x68\x68\xc0\x68\x7e\x2c\x74\xaa\x78\x6e\xc0\x3c\xe5\xf6\x20\xf8\x68\xe2\x6f\xb4\xa4\x0d\x95\x74\x43\xa6\xa4\x0a\x32\xaa\xcd\x97\xd6\x01\x0d\x09\xb0\xcb\x28\x93\x29\xcd\x82\x70\xee\x49\x69\xd7\xce\x1f\x68\x0e\x09\x54\x67\x57\x44\x1b\x99\xdb\x19\x33\x85\xf3\x2b\xc2\x05\x37\x9c\x66\xfc\x2f\x1b\x95\x29\x5c\x5c\x01\x69\x0b\xb4\x21\x5c\x5e\x91\x5c\x61\x4e\xdb\xd7\x37\x96\x5f\x08\x61\xdf\xea\xb9\xef\x8b\xc6\x54\xdf\xcb\x3b\x2a\x24\x24\x70\x7e\xb6\xff\x1b\xc8\x28\x14\x0c\xd5\x35\x1a\xca\x33\xeb\xef\xaa\x10\xa9\x9d\x47\x41\xbe\x9f\x4c\x3a\xac\x4e\xba\x78\xf1\x95\xc7\x80\x24\x01\x51\x64\x59\x58\x79\x21\x56\x68\x0a\x25\xe6\x1d\xa5\xee\x95\xad\xbd\xa6\x1c\xbf\x0c\x52\xe4\x9b\xb5\x91\x19\x58\xf4\x03\x06\x49\x1f\xb9\xdf\x9c\x64\xd4\x0c\xc6\x3f\xe6\xbe\x02\x5f\x05\x1d\x33\xcb\x90\x0d\xfc\x83\x1e\x8b\xe8\x86\x4f\xe6\x1e\xbf\x1e\x59\x56\x98\xfe\x24\x98\xab\xcd\xc6\xba\x8e\xf6\x03\xb2\xfb\xe2\xb8\xff\x49\x80\x10\xf8\xdf\x77\x65\xae\x5a\xee\x9d\xdc\xcd\x9f\xdb\xe9\xe5\x12\x08\x04\xee\xe0\x9a\x1a\x0c\x7a\x07\x42\x98\x41\x47\x1e\x99\xf9\x6c\xa8\x32\x4e\x28\x84\xd8\x25\x3b\x3a\x3b\x66\xc2\x4e\x11\x48\xe0\x28\xff\x96\xae\x9f\x9f\xf5\xfd\x6e\x0b\xb3\x31\xb1\x69\xfe\xf9\x38\x5b\xa9\x2c\x84\x39\x66\xc5\x8e\xa5\x9e\xe7\xab\xc6\x31\x64\x68\x26\x1a\xd2\x0d\xa6\x7f\x02\x5f\xc1\x0e\x61\x43\x4b\x04\x0a\xb9\xc2\x92\xcb\x42\x03\xa3\x86\xda\x81\x43\x05\x03\xfb\x34\x1b\xdc\x82\x91\xf6\xc9\xd5\x10\x2c\x95\x4a\x61\x6a\xa0\xa4\x59\x81\x7a\xe4\x86\x6d\xd4\x7d\x93\x0e\x9a\x36\x5a\xa3\x09\xcc\x86\xeb\x70\x5c\x54\x9d\xca\xa8\xa0\xe2\x18\x18\x5f\xad\xac\x17\x9d\x9b\x2e\x50\xc0\x45\x3b\x73\xf5\x40\xc1\xda\xb7\xe3\xf0\xda\x6a\x25\x10\x74\x45\x01\xb3\xde\x2f\xfb\xee\xe7\x72\x80\xd0\x96\x78\xe1\x7a\xd0\x1f\x0f\x23\xd7\x60\x9c\xf4\x71\xdd\xb4\xe3\xdb\xb7\x3b\xe2\x85\xf1\xde\xd5\xf9\x00\xba\x1e\x7a\xe4\xe7\xbc\x35\x72\x23\xf2\xc2\x44\xef\x2c\x63\x60\xc0\xa3\x1f\x03\xf7\x8a\x64\x00\xe6\x36\xd7\x01\x30\x47\x3f\x0c\xe6\x37\xf4\x30\xd1\xba\x4d\xf4\xb4\xc9\x56\xf8\xac\x8e\xdd\xb6\x1a\xbb\x70\x6d\x89\x61\xdc\x0f\xd7\x81\x5a\x33\xfe\x60\xb2\x30\x6c\x39\x39\x6d\xf4\xba\x89\x19\x19\xf9\x33\x7f\x44\x16\x9c\x85\xa7\x93\x45\x6c\xd8\xf2\x77\x31\x39\x1d\x1c\xdc\x53\x2c\xf4\x0b\x42\xfe\xc8\x38\x9d\xe8\x57\xc9\xda\xa0\xbe\xde\x0d\x6f\x22\xbc\x20\xd9\xa5\xff\xf5\xe0\xfb\x1c\xff\x58\x54\xf6\x69\x68\x8a\xf3\x96\xae\x5f\xaf\xee\xd2\xd9\x89\x5f\x84\x5e\xcc\xbc\x7d\x35\x1f\x2e\xac\xb5\x92\x45\xfe\x6e\x43\xb9\x80\x04\xbe\x46\xa9\xfd\xe6\xed\xc0\xe8\x63\xbf\x27\xe7\x03\xc5\x4e\xe6\x96\x6b\x03\x89\x07\x34\xf0\x2d\xda\xd2\x3c\xe8\xd6\x5f\x39\x75\x7a\x37\xe3\x9d\xe5\x95\xd6\xd7\x88\x6a\xcd\xd7\x22\x78\x26\x00\x50\xd5\xd3\x03\xd4\xf2\x10\xb1\x82\xc9\x9d\xdc\x4d\xae\xfa\x8d\x12\x1e\x12\x03\x98\x74\x07\x99\xc0\x95\xf5\x4e\xe3\x8d\x30\x41\xeb\xe6\x21\x9d\xfa\x19\x2d\x1c\x8d\x8e\x30\x6a\x66\x72\x10\x46\x5a\x2a\xf3\xf6\x29\xf0\xac\xb4\xcc\xc0\xef\xc7\x38\x06\x2b\x08\x34\xcb\xfa\xc0\x6a\x9f\xdd\x5c\x2c\xa6\x80\xc2\xa0\x72\xdb\x41\xe1\x56\x96\xe8\x16\xc6\x20\x31\xac\xb9\x96\x69\xcc\x30\x35\x01\xf9\xef\xe8\xbe\x18\xb6\x9c\xff\x67\x59\x40\xfa\xde\x7d\x90\x8f\x24\x8c\x2c\x58\x30\xc8\xac\x77\x34\x16\x6d\xcc\x36\x0b\x0e\x5d\x71\x06\x52\xce\xc5\x20\x8c\x68\x9e\xa3\x60\x01\x31\x8a\x84\x91\xfb\xcf\x13\x59\x40\x06\x16\xa7\x60\x54\x81\xe1\x6b\x81\x1f\xb9\x09\xc2\xa8\x39\x78\x10\xee\xc3\xd7\x97\xf4\x8e\x0b\x26\x77\x76\xf0\xdd\x58\x1f\x4a\x9a\xf5\xa5\x17\x42\x5f\x72\xec\x32\xfa\xa6\xa5\x08\x48\x55\x45\x0f\x54\xe3\xd7\x9c\x9a\x4d\x5d\xc7\xf6\xf8\xb1\x8d\x57\x5c\x55\x51\x49\x95\x8e\x38\x7b\xac\x6b\x32\x1d\xde\x23\x3b\xa7\xea\x29\x5c\x9c\x9d\x9d\xf5\x99\xb4\x5b\xd9\xe6\x90\x1b\x68\xaf\xb9\xd9\xd3\xc9\xbf\x65\xb3\xbd\xb7\x37\xd7\x72\xf7\x5b\x46\x73\x87\x6f\x1f\x55\x85\x82\xd5\xf5\xc9\xdf\x01\x00\x00\xff\xff\x6f\xf7\x6b\x27\x0b\x11\x00\x00")

func webTemplatesMonitorDetails_viewGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorDetails_viewGoHtml,
		"web/templates/monitor/details_view.go.html",
	)
}

func webTemplatesMonitorDetails_viewGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorDetails_viewGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/details_view.go.html", size: 4363, mode: os.FileMode(420), modTime: time.Unix(1589209908, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\xc1\x8e\xda\x30\x10\x86\xef\xfb\x14\xa3\x88\xf6\x54\x12\x15\xed\x69\x1b\x90\xda\xaa\x42\x6c\xd1\x06\xb5\xa1\xd7\xca\xe0\x81\x58\xf5\xda\x96\xe3\x40\x2b\xcb\xef\x5e\x39\x90\x6c\x48\xa0\x39\xd0\x5d\xb5\x17\xb0\x3d\xbf\xc7\xdf\x4c\xc6\x1e\x6b\x29\x6e\x98\x40\x08\xd6\x52\x18\x14\x26\x70\xee\x26\xa6\x6c\x07\x6b\x4e\xf2\x7c\x1c\x68\xb9\x0f\x26\x37\x00\xcd\x35\x2f\x25\x4c\xa0\x2e\x2d\x6d\x1b\x1f\x3e\xd2\xe1\xdb\xd1\xd1\x06\x10\x67\xa3\xc9\x42\xcb\x35\xe6\xb9\xd4\x79\x1c\x65\xa3\xca\x62\xed\x60\x45\x72\xfc\xae\x88\xc9\xe0\x6e\x0c\x61\x3d\x73\xae\x96\x68\x22\xb6\x08\x03\x26\x28\xfe\x7c\x03\x03\x55\x79\x2a\x37\xd4\xb3\xbc\xde\xd1\x87\xd3\x56\x28\x22\x90\x43\xf9\x3b\xa4\xb8\x21\x05\x37\x27\xda\x33\xea\x61\x86\x84\x32\xb1\x6d\xe9\x7c\xa8\xb7\xa7\x42\xc3\x0c\xc7\x60\x12\x13\xc8\x34\x6e\xc6\x41\x33\x62\xe7\xa2\x1a\x3f\xb2\xf6\x10\xa1\x73\xc1\xc4\xda\xa7\x28\xc3\xa9\x26\x2a\x0b\xa7\x5a\x16\xca\xb9\x38\x22\x9d\x23\xa3\xec\xb6\x85\x1b\x51\xb6\xeb\x8b\x60\x25\xe9\xaf\x0e\xbe\xb5\xb0\x67\x26\x83\xc1\xd6\x1f\xea\x13\xdc\x06\x81\x46\x9a\x8f\xae\x0b\xde\x76\xd3\xf8\x6a\x48\xb7\x38\xa3\xfe\xbb\xf9\x51\xe9\xb1\xf4\x1d\xce\x84\x2a\xcc\x57\xa3\x91\x3c\xe6\x1d\x9f\x00\x31\x67\x93\xd9\xc3\x62\x99\xde\xf9\x22\xf1\x7b\xc3\x54\x2a\xb6\x76\x0e\x5e\x6b\xa2\xf5\x3b\xb0\x56\x69\x26\xcc\x06\x82\x57\x69\x70\x70\x1f\x7e\x94\x14\xd7\x3e\x4b\x9c\x9d\x63\x42\x41\xcf\x1c\xd5\xcf\x7a\x2f\x99\x30\x29\x59\x71\xbc\x84\x7a\x9f\xcc\x1e\xfe\x09\xd4\xb9\x94\x3f\x0a\xf5\x47\xd6\x79\x92\x7c\x5e\x2e\x5e\x02\xb6\xaa\x25\x79\x24\x6a\x70\x4e\xeb\xc5\x0b\x94\xd3\x2f\xc9\x72\x91\xbe\xff\x30\xff\x54\x92\x3e\x39\xe9\xe1\x6d\x08\xaf\xa2\xe6\x52\xaa\xd3\xbc\xaa\x43\xb5\x5e\xce\xea\x21\xa7\x7e\x63\x0f\x63\x29\x79\xa6\x02\x48\x0a\xd3\x7b\xb1\x92\x65\xfa\x02\x37\x2b\x8e\xba\x2f\x83\xb5\x80\x82\xb6\x1f\x91\xce\x83\xd5\x5a\x38\x99\x36\x0f\xab\x0d\xc7\xc1\xd5\x6d\xea\x1b\xc3\xfd\xd5\x1d\x6a\xc7\x70\x5f\x6a\xfd\xe0\xff\xec\x4b\x9e\xbc\xdd\x92\xfc\x5a\x55\x2a\xcf\xda\x87\xfe\x5a\x39\x1c\xff\x2a\xc9\xef\x00\x00\x00\xff\xff\x33\x4f\x5a\x19\xeb\x08\x00\x00")

func webTemplatesMonitorIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorIndexGoHtml,
		"web/templates/monitor/index.go.html",
	)
}

func webTemplatesMonitorIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/index.go.html", size: 2283, mode: os.FileMode(420), modTime: time.Unix(1588163175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x41\xca\x83\x30\x10\x46\xf7\x9e\x62\x08\x2e\xfe\x1f\x4a\xb2\x2f\x31\x5b\x2f\xd0\xbd\xa4\x3a\xd6\x80\x4d\x42\xa2\x6d\x61\x98\xbb\x97\x54\x70\x25\xa5\xab\x99\xc5\xe3\x7b\x8f\x68\xc0\xd1\x79\x04\x71\x47\xbf\x76\x7d\xf0\x0b\xfa\x45\x30\x57\x44\xc9\xfa\x1b\x42\xed\xfc\x80\xaf\x13\xd4\x31\x85\x1e\xce\x0d\xc8\xf2\x60\xce\x21\x65\xe6\x0a\x40\xcf\xce\x68\x0b\x53\xc2\xb1\x11\x44\xb5\xbc\xda\x8c\x5d\xb4\xcb\xc4\xac\x76\x56\x11\x6d\x4b\xcc\xc2\x10\x7d\xd6\x64\x9b\x6c\x9c\x64\x9b\xc2\x1a\x99\xe1\x6f\x87\xff\xb5\xb2\x46\xab\xd9\x99\x8a\x08\xfd\xf0\x35\xe7\xe1\xf0\xf9\x43\x49\xc1\x0e\x23\x2e\x21\xba\xbe\xe8\x0b\x71\x68\xde\xee\x3b\x00\x00\xff\xff\xfc\x37\x76\xe3\x2b\x01\x00\x00")

func webTemplatesMonitorMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorMenuGoHtml,
		"web/templates/monitor/menu.go.html",
	)
}

func webTemplatesMonitorMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/menu.go.html", size: 299, mode: os.FileMode(420), modTime: time.Unix(1588163175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesQueryIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x4c\x08\xa3\x39\xb4\xb2\xd0\xe4\xd6\x50\xea\xa5\x39\x15\x28\x50\xf4\xd0\x63\x40\x89\x23\x89\x28\x4d\xaa\xe4\x30\x8e\x21\xe8\xbf\x2f\xf4\x19\x5b\x96\xed\x2c\x16\x0b\xec\x45\xc9\x68\x3e\x38\xef\xcd\xe3\x58\x4d\x23\xb1\x50\x06\x81\xe5\xd6\x10\x1a\x62\x6d\x7b\xc7\xa5\x7a\x83\x5c\x0b\xef\x13\xe6\xec\x9e\xa5\x77\x00\x00\xc7\x6f\xbb\x60\xa1\x0c\xba\xd1\xb7\xf4\x7f\x64\xad\x79\x73\xab\xa3\x9d\x8c\x7e\x7d\x5c\xc4\x00\xf0\xea\x31\xfd\x3b\xa0\x3b\xc0\x9f\x78\xf0\x3c\xae\x1e\x97\x11\x4d\xa3\x0a\xd8\xa2\x73\xd6\xb5\xed\x32\xfb\xe8\x0c\xa1\xd1\x11\xf4\xcf\x48\x0a\x53\xa2\x9b\x0c\xe5\x77\xca\x7b\x95\x69\x64\xe0\xac\xc6\x31\xf6\xac\x17\x00\x9e\x05\x22\x6b\x80\x0e\x35\x26\x6c\x30\xd8\x0c\x42\x5b\x8f\x0c\xa4\x20\x31\xd5\x9c\x2b\x71\x5f\x0b\x93\xfe\x44\x6a\x87\xfe\x99\xc7\xbd\xc5\xe3\xa1\xc0\xca\x31\x9e\x9c\x35\x65\xfa\xd2\x81\xba\xe7\xf1\x68\x42\xd3\x0c\x38\xb7\x2f\xeb\x68\x63\xa9\xde\xce\xe9\x41\x23\xcf\x42\x07\xd2\xf6\xc2\x19\x65\xca\x4f\xd3\x36\xc6\xff\xf0\xbc\xfd\x3b\xf4\x79\xca\xdc\xd8\xfc\xb7\x73\x37\xb1\xe7\x6d\x70\x39\xfa\x15\x3f\x2f\xac\xdb\x81\x35\x3e\x64\x3b\x45\x09\xdb\x2b\x23\xed\x7e\xab\x6d\x2e\x48\x59\x03\x09\x3c\x34\xcd\x36\x13\x1e\x5f\x6b\x41\x55\xdb\xc6\x4d\xb3\xf5\xa8\x31\x27\x94\xaf\x43\xdd\xb6\x8d\x1f\xe0\x67\xf0\x28\x5c\x5e\x6d\xdf\x84\x0e\xf8\x0c\x0e\x29\x38\x03\x85\xd0\x1e\x9f\x57\x78\x5e\x0e\x4f\x99\x3a\x50\x54\x3a\x1b\x6a\x38\xfa\x3f\xd2\xe5\x85\xe4\x2b\x05\xa2\x8c\xcc\x95\xac\x9b\x63\xce\xc8\x40\x46\x26\x92\x58\x88\xa0\x09\xa4\xb3\xb5\xb4\x7b\x13\x91\x2d\x4b\x3d\x09\x60\x30\x12\x36\x79\x59\xba\x46\x4d\x2f\x8b\x59\x3f\xc2\x61\x27\x95\x5b\xea\x38\xe9\x34\xe8\x29\x7d\xee\x63\x87\x26\xdc\x00\x08\xfd\xf0\x37\xf3\xe4\xe0\xb7\x04\x8e\xe7\xf8\x89\x64\xd7\xad\x1e\xd8\x28\x23\xf1\xfd\x17\xd8\x0c\x88\xfa\x3a\x97\xf5\x74\xd6\xbd\x56\x29\x17\x50\x39\x2c\x12\x76\xdc\x4f\xaf\xa4\xcd\xc4\x52\xc7\xdd\x6c\xf0\x58\xa4\x3c\xd6\xea\x33\x00\xd7\x55\x7f\xd2\x41\x1c\xf4\x15\x05\xad\x5d\xa6\x23\x77\xaf\x2a\x50\x32\x61\x83\xbc\xd9\xa8\x18\xc2\x77\x9a\xf5\xd2\xdd\xa1\xa8\xfb\x59\x71\x56\x33\x70\xf8\x7f\x50\x0e\xe5\xf7\x97\xed\x70\x69\x2f\xc9\x96\xa5\xff\xf4\x2d\xdf\x96\xd9\x15\x12\x2e\xb8\x78\xdc\x61\x3e\x7f\xdf\x34\xa8\x3d\xae\xed\x99\xeb\x7b\x7a\xb1\x95\xff\xb2\x30\x4a\x0c\x0a\x1b\x8c\xbc\x87\x3f\x94\x84\x83\x0d\x50\x58\x57\x22\x01\x59\x10\x44\x22\xaf\x80\x2a\xdc\xfd\x7e\xa1\xcb\x35\x79\x2c\x42\x17\xe6\xb0\x2e\xfb\x15\x76\x94\xc7\x2b\x17\xaf\x7f\x2b\xd4\xc2\xa0\x86\xfe\x39\x6f\x8b\xc1\xf2\x21\xcf\xd1\xfb\x2b\x5f\x12\x43\x5c\x85\x42\x76\x04\xac\x70\x5c\x3d\x9d\x86\x92\x22\x8d\xfd\x96\xf9\x0f\x0f\xdd\x35\xa9\x9e\xd2\x6b\xd8\xd6\x0f\xcc\xac\x3c\xac\x9d\x56\x3b\xec\x4a\x8f\xd8\x79\xdc\xd9\x5f\xc5\xdc\x07\xd7\xa3\x6b\xfc\x33\x79\xbe\x04\x00\x00\xff\xff\x05\xda\xbe\x9a\xaf\x09\x00\x00")

func webTemplatesQueryIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesQueryIndexGoHtml,
		"web/templates/query/index.go.html",
	)
}

func webTemplatesQueryIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesQueryIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/query/index.go.html", size: 2479, mode: os.FileMode(420), modTime: time.Unix(1588163175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesIndexIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcf\x4a\xc4\x30\x10\x87\xef\x7d\x8a\x21\xec\xd1\x6e\x51\xf6\x24\x6d\x0f\x3e\x80\xf8\x0a\x43\x67\xba\x09\xa4\xd3\xa5\x8d\xab\x30\xcc\xbb\x8b\x4b\xac\xa6\x0a\x5e\x92\xcc\x7c\x5f\xfe\xfc\xa2\x4a\x3c\x06\x61\x70\xc3\x2c\x89\x25\x39\xb3\xaa\xa5\x70\x85\x21\xe2\xba\x76\x6e\x99\xdf\x5c\x5f\x01\xfc\xec\x7d\xaa\x18\x84\x97\x1b\xd9\xb3\x58\x4f\x54\xdf\x3f\x64\x06\xa0\xba\xa0\x9c\x19\x0e\x41\x88\xdf\xef\xe0\x30\xcc\xd3\x65\x16\x96\x04\x8f\x1d\x1c\xb7\x6a\x35\xcb\x3b\xfe\x3b\x71\x6f\x5c\x50\x38\xc2\x6d\xac\x89\x47\x7c\x8d\xa9\x70\xff\xb0\x6b\xcf\x48\x41\xce\x3b\x0f\xa0\xf5\xa7\x52\x4c\x21\x45\x76\x7d\x8b\xe0\x17\x1e\x3b\xa7\xfa\x1d\xe0\xf8\x84\x2b\xbf\x60\xf2\x66\x8d\xeb\x0b\xf2\x8c\x13\x9b\xb5\x0d\xfe\xba\xa0\xf1\xa7\xbe\x2a\x5f\xd7\x50\xb8\x16\xe1\xca\x46\x51\xaa\xb2\x50\xfe\xaa\x0d\xe4\x45\x9e\xbe\x94\x8f\x00\x00\x00\xff\xff\xcd\x13\xfe\x16\xdd\x01\x00\x00")

func webTemplatesIndexIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesIndexIndexGoHtml,
		"web/templates/index/index.go.html",
	)
}

func webTemplatesIndexIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesIndexIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/index/index.go.html", size: 477, mode: os.FileMode(420), modTime: time.Unix(1588163175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"web/templates/common/base.go.html":               webTemplatesCommonBaseGoHtml,
	"web/templates/common/head.go.html":               webTemplatesCommonHeadGoHtml,
	"web/templates/common/menu.go.html":               webTemplatesCommonMenuGoHtml,
	"web/templates/monitor/details_processor.go.html": webTemplatesMonitorDetails_processorGoHtml,
	"web/templates/monitor/details_view.go.html":      webTemplatesMonitorDetails_viewGoHtml,
	"web/templates/monitor/index.go.html":             webTemplatesMonitorIndexGoHtml,
	"web/templates/monitor/menu.go.html":              webTemplatesMonitorMenuGoHtml,
	"web/templates/query/index.go.html":               webTemplatesQueryIndexGoHtml,
	"web/templates/index/index.go.html":               webTemplatesIndexIndexGoHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"web": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"common": &bintree{nil, map[string]*bintree{
				"base.go.html": &bintree{webTemplatesCommonBaseGoHtml, map[string]*bintree{}},
				"head.go.html": &bintree{webTemplatesCommonHeadGoHtml, map[string]*bintree{}},
				"menu.go.html": &bintree{webTemplatesCommonMenuGoHtml, map[string]*bintree{}},
			}},
			"index": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesIndexIndexGoHtml, map[string]*bintree{}},
			}},
			"monitor": &bintree{nil, map[string]*bintree{
				"details_processor.go.html": &bintree{webTemplatesMonitorDetails_processorGoHtml, map[string]*bintree{}},
				"details_view.go.html":      &bintree{webTemplatesMonitorDetails_viewGoHtml, map[string]*bintree{}},
				"index.go.html":             &bintree{webTemplatesMonitorIndexGoHtml, map[string]*bintree{}},
				"menu.go.html":              &bintree{webTemplatesMonitorMenuGoHtml, map[string]*bintree{}},
			}},
			"query": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesQueryIndexGoHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
